package mnj.mfg.model.entities;

import java.sql.SQLException;

import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowInconsistentException;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon May 02 17:16:09 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HeaderEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    @Override
    public void postChanges(TransactionEvent transactionEvent) {
        /* By Pwc */ /* If current entity is new or modified */
        if (getPostState() == STATUS_NEW ||
            getPostState() == STATUS_MODIFIED) {
            /* Get the associated product for the service request */
            NewHeaderEOImpl Detail = getNewHeaderEO();
            /* If there is an associated product */
            if (Detail != null) {
                /* And if it's post-status is NEW */
                if (Detail.getPostState() == STATUS_NEW) {
                    /*
        * Post the product first, before posting this
        * entity by calling super below
        */
                    Detail.postChanges(transactionEvent);
                }
            }
        }
        /* End By Pwc */
        super.postChanges(transactionEvent);
    }


    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        HeaderId {
            public Object get(HeaderEOImpl obj) {
                return obj.getHeaderId();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setHeaderId((Number)value);
            }
        }
        ,
        ReceiveNo {
            public Object get(HeaderEOImpl obj) {
                return obj.getReceiveNo();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setReceiveNo((String)value);
            }
        }
        ,
        InvoiceNo {
            public Object get(HeaderEOImpl obj) {
                return obj.getInvoiceNo();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setInvoiceNo((String)value);
            }
        }
        ,
        Color {
            public Object get(HeaderEOImpl obj) {
                return obj.getColor();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setColor((String)value);
            }
        }
        ,
        BuyerId {
            public Object get(HeaderEOImpl obj) {
                return obj.getBuyerId();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setBuyerId((Number)value);
            }
        }
        ,
        StyleName {
            public Object get(HeaderEOImpl obj) {
                return obj.getStyleName();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setStyleName((String)value);
            }
        }
        ,
        Season {
            public Object get(HeaderEOImpl obj) {
                return obj.getSeason();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setSeason((String)value);
            }
        }
        ,
        DateOfGrn {
            public Object get(HeaderEOImpl obj) {
                return obj.getDateOfGrn();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setDateOfGrn((Date)value);
            }
        }
        ,
        CreatedBy {
            public Object get(HeaderEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        CreationDate {
            public Object get(HeaderEOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(HeaderEOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(HeaderEOImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        OrgId {
            public Object get(HeaderEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setOrgId((Number)value);
            }
        }
        ,
        HeaderNo {
            public Object get(HeaderEOImpl obj) {
                return obj.getHeaderNo();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setHeaderNo((Number)value);
            }
        }
        ,
        LotNumber {
            public Object get(HeaderEOImpl obj) {
                return obj.getLotNumber();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setLotNumber((Number)value);
            }
        }
        ,
        Attribute1 {
            public Object get(HeaderEOImpl obj) {
                return obj.getAttribute1();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttribute1((String)value);
            }
        }
        ,
        Attribute2 {
            public Object get(HeaderEOImpl obj) {
                return obj.getAttribute2();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttribute2((String)value);
            }
        }
        ,
        Attribute3 {
            public Object get(HeaderEOImpl obj) {
                return obj.getAttribute3();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttribute3((String)value);
            }
        }
        ,
        Attribute4 {
            public Object get(HeaderEOImpl obj) {
                return obj.getAttribute4();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttribute4((String)value);
            }
        }
        ,
        Attribute5 {
            public Object get(HeaderEOImpl obj) {
                return obj.getAttribute5();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttribute5((String)value);
            }
        }
        ,
        Attribute6 {
            public Object get(HeaderEOImpl obj) {
                return obj.getAttribute6();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttribute6((String)value);
            }
        }
        ,
        Attribute7 {
            public Object get(HeaderEOImpl obj) {
                return obj.getAttribute7();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttribute7((String)value);
            }
        }
        ,
        Attribute8 {
            public Object get(HeaderEOImpl obj) {
                return obj.getAttribute8();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttribute8((String)value);
            }
        }
        ,
        Attribute9 {
            public Object get(HeaderEOImpl obj) {
                return obj.getAttribute9();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttribute9((String)value);
            }
        }
        ,
        Attribute10 {
            public Object get(HeaderEOImpl obj) {
                return obj.getAttribute10();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttribute10((String)value);
            }
        }
        ,
        Attribute11 {
            public Object get(HeaderEOImpl obj) {
                return obj.getAttribute11();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttribute11((String)value);
            }
        }
        ,
        Attribute12 {
            public Object get(HeaderEOImpl obj) {
                return obj.getAttribute12();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttribute12((String)value);
            }
        }
        ,
        Attribute13 {
            public Object get(HeaderEOImpl obj) {
                return obj.getAttribute13();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttribute13((String)value);
            }
        }
        ,
        Attribute14 {
            public Object get(HeaderEOImpl obj) {
                return obj.getAttribute14();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttribute14((String)value);
            }
        }
        ,
        Attribute15 {
            public Object get(HeaderEOImpl obj) {
                return obj.getAttribute15();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttribute15((String)value);
            }
        }
        ,
        SalesorderId {
            public Object get(HeaderEOImpl obj) {
                return obj.getSalesorderId();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setSalesorderId((Number)value);
            }
        }
        ,
        TransactionType {
            public Object get(HeaderEOImpl obj) {
                return obj.getTransactionType();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setTransactionType((String)value);
            }
        }
        ,
        TransTypeCode {
            public Object get(HeaderEOImpl obj) {
                return obj.getTransTypeCode();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setTransTypeCode((String)value);
            }
        }
        ,
        Transaction {
            public Object get(HeaderEOImpl obj) {
                return obj.getTransaction();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setTransaction((String)value);
            }
        }
        ,
        IrHeaderId {
            public Object get(HeaderEOImpl obj) {
                return obj.getIrHeaderId();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setIrHeaderId((Number)value);
            }
        }
        ,
        Remarks {
            public Object get(HeaderEOImpl obj) {
                return obj.getRemarks();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        UpdateOn {
            public Object get(HeaderEOImpl obj) {
                return obj.getUpdateOn();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setUpdateOn((Date)value);
            }
        }
        ,
        ReceiptChallanNo {
            public Object get(HeaderEOImpl obj) {
                return obj.getReceiptChallanNo();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setReceiptChallanNo((String)value);
            }
        }
        ,
        Unit {
            public Object get(HeaderEOImpl obj) {
                return obj.getUnit();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setUnit((String)value);
            }
        }
        ,
        PocId {
            public Object get(HeaderEOImpl obj) {
                return obj.getPocId();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setPocId((Number)value);
            }
        }
        ,
        LineEO {
            public Object get(HeaderEOImpl obj) {
                return obj.getLineEO();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        NewHeaderEO {
            public Object get(HeaderEOImpl obj) {
                return obj.getNewHeaderEO();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setNewHeaderEO((NewHeaderEOImpl)value);
            }
        }
        ,
        MNJ_ISSUE_REC_WASH_REC_L_EO {
            public Object get(HeaderEOImpl obj) {
                return obj.getMNJ_ISSUE_REC_WASH_REC_L_EO();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(HeaderEOImpl object);

        public abstract void put(HeaderEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int HEADERID = AttributesEnum.HeaderId.index();
    public static final int RECEIVENO = AttributesEnum.ReceiveNo.index();
    public static final int INVOICENO = AttributesEnum.InvoiceNo.index();
    public static final int COLOR = AttributesEnum.Color.index();
    public static final int BUYERID = AttributesEnum.BuyerId.index();
    public static final int STYLENAME = AttributesEnum.StyleName.index();
    public static final int SEASON = AttributesEnum.Season.index();
    public static final int DATEOFGRN = AttributesEnum.DateOfGrn.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HEADERNO = AttributesEnum.HeaderNo.index();
    public static final int LOTNUMBER = AttributesEnum.LotNumber.index();
    public static final int ATTRIBUTE1 = AttributesEnum.Attribute1.index();
    public static final int ATTRIBUTE2 = AttributesEnum.Attribute2.index();
    public static final int ATTRIBUTE3 = AttributesEnum.Attribute3.index();
    public static final int ATTRIBUTE4 = AttributesEnum.Attribute4.index();
    public static final int ATTRIBUTE5 = AttributesEnum.Attribute5.index();
    public static final int ATTRIBUTE6 = AttributesEnum.Attribute6.index();
    public static final int ATTRIBUTE7 = AttributesEnum.Attribute7.index();
    public static final int ATTRIBUTE8 = AttributesEnum.Attribute8.index();
    public static final int ATTRIBUTE9 = AttributesEnum.Attribute9.index();
    public static final int ATTRIBUTE10 = AttributesEnum.Attribute10.index();
    public static final int ATTRIBUTE11 = AttributesEnum.Attribute11.index();
    public static final int ATTRIBUTE12 = AttributesEnum.Attribute12.index();
    public static final int ATTRIBUTE13 = AttributesEnum.Attribute13.index();
    public static final int ATTRIBUTE14 = AttributesEnum.Attribute14.index();
    public static final int ATTRIBUTE15 = AttributesEnum.Attribute15.index();
    public static final int SALESORDERID = AttributesEnum.SalesorderId.index();
    public static final int TRANSACTIONTYPE = AttributesEnum.TransactionType.index();
    public static final int TRANSTYPECODE = AttributesEnum.TransTypeCode.index();
    public static final int TRANSACTION = AttributesEnum.Transaction.index();
    public static final int IRHEADERID = AttributesEnum.IrHeaderId.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int UPDATEON = AttributesEnum.UpdateOn.index();
    public static final int RECEIPTCHALLANNO = AttributesEnum.ReceiptChallanNo.index();
    public static final int UNIT = AttributesEnum.Unit.index();
    public static final int POCID = AttributesEnum.PocId.index();
    public static final int LINEEO = AttributesEnum.LineEO.index();
    public static final int NEWHEADEREO = AttributesEnum.NewHeaderEO.index();
    public static final int MNJ_ISSUE_REC_WASH_REC_L_EO = AttributesEnum.MNJ_ISSUE_REC_WASH_REC_L_EO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public HeaderEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("mnj.mfg.model.entities.HeaderEO");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for HeaderId, using the alias name HeaderId.
     * @return the HeaderId
     */
    public Number getHeaderId() {
        return (Number)getAttributeInternal(HEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeaderId.
     * @param value value to set the HeaderId
     */
    public void setHeaderId(Number value) {
        setAttributeInternal(HEADERID, value);
    }

    /**
     * Gets the attribute value for ReceiveNo, using the alias name ReceiveNo.
     * @return the ReceiveNo
     */
    public String getReceiveNo() {
        return (String)getAttributeInternal(RECEIVENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReceiveNo.
     * @param value value to set the ReceiveNo
     */
    public void setReceiveNo(String value) {
        setAttributeInternal(RECEIVENO, value);
    }

    /**
     * Gets the attribute value for InvoiceNo, using the alias name InvoiceNo.
     * @return the InvoiceNo
     */
    public String getInvoiceNo() {
        return (String)getAttributeInternal(INVOICENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for InvoiceNo.
     * @param value value to set the InvoiceNo
     */
    public void setInvoiceNo(String value) {
        setAttributeInternal(INVOICENO, value);
    }

    /**
     * Gets the attribute value for Color, using the alias name Color.
     * @return the Color
     */
    public String getColor() {
        return (String)getAttributeInternal(COLOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for Color.
     * @param value value to set the Color
     */
    public void setColor(String value) {
        setAttributeInternal(COLOR, value);
    }

    /**
     * Gets the attribute value for BuyerId, using the alias name BuyerId.
     * @return the BuyerId
     */
    public Number getBuyerId() {
        return (Number)getAttributeInternal(BUYERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BuyerId.
     * @param value value to set the BuyerId
     */
    public void setBuyerId(Number value) {
        setAttributeInternal(BUYERID, value);
    }

    /**
     * Gets the attribute value for StyleName, using the alias name StyleName.
     * @return the StyleName
     */
    public String getStyleName() {
        return (String)getAttributeInternal(STYLENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for StyleName.
     * @param value value to set the StyleName
     */
    public void setStyleName(String value) {
        setAttributeInternal(STYLENAME, value);
    }

    /**
     * Gets the attribute value for Season, using the alias name Season.
     * @return the Season
     */
    public String getSeason() {
        return (String)getAttributeInternal(SEASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for Season.
     * @param value value to set the Season
     */
    public void setSeason(String value) {
        setAttributeInternal(SEASON, value);
    }

    /**
     * Gets the attribute value for DateOfGrn, using the alias name DateOfGrn.
     * @return the DateOfGrn
     */
    public Date getDateOfGrn() {
        return (Date)getAttributeInternal(DATEOFGRN);
    }

    /**
     * Sets <code>value</code> as the attribute value for DateOfGrn.
     * @param value value to set the DateOfGrn
     */
    public void setDateOfGrn(Date value) {
        setAttributeInternal(DATEOFGRN, value);
    }


    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the OrgId
     */
    public Number getOrgId() {
        return (Number)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(Number value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for HeaderNo, using the alias name HeaderNo.
     * @return the HeaderNo
     */
    public Number getHeaderNo() {
        return (Number)getAttributeInternal(HEADERNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeaderNo.
     * @param value value to set the HeaderNo
     */
    public void setHeaderNo(Number value) {
        setAttributeInternal(HEADERNO, value);
    }

    /**
     * Gets the attribute value for LotNumber, using the alias name LotNumber.
     * @return the LotNumber
     */
    public Number getLotNumber() {
        return (Number)getAttributeInternal(LOTNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for LotNumber.
     * @param value value to set the LotNumber
     */
    public void setLotNumber(Number value) {
        setAttributeInternal(LOTNUMBER, value);
    }

    /**
     * Gets the attribute value for Attribute1, using the alias name Attribute1.
     * @return the Attribute1
     */
    public String getAttribute1() {
        return (String)getAttributeInternal(ATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute1.
     * @param value value to set the Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**
     * Gets the attribute value for Attribute2, using the alias name Attribute2.
     * @return the Attribute2
     */
    public String getAttribute2() {
        return (String)getAttributeInternal(ATTRIBUTE2);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute2.
     * @param value value to set the Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**
     * Gets the attribute value for Attribute3, using the alias name Attribute3.
     * @return the Attribute3
     */
    public String getAttribute3() {
        return (String)getAttributeInternal(ATTRIBUTE3);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute3.
     * @param value value to set the Attribute3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**
     * Gets the attribute value for Attribute4, using the alias name Attribute4.
     * @return the Attribute4
     */
    public String getAttribute4() {
        return (String)getAttributeInternal(ATTRIBUTE4);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute4.
     * @param value value to set the Attribute4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**
     * Gets the attribute value for Attribute5, using the alias name Attribute5.
     * @return the Attribute5
     */
    public String getAttribute5() {
        return (String)getAttributeInternal(ATTRIBUTE5);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute5.
     * @param value value to set the Attribute5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**
     * Gets the attribute value for Attribute6, using the alias name Attribute6.
     * @return the Attribute6
     */
    public String getAttribute6() {
        return (String)getAttributeInternal(ATTRIBUTE6);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute6.
     * @param value value to set the Attribute6
     */
    public void setAttribute6(String value) {
        setAttributeInternal(ATTRIBUTE6, value);
    }

    /**
     * Gets the attribute value for Attribute7, using the alias name Attribute7.
     * @return the Attribute7
     */
    public String getAttribute7() {
        return (String)getAttributeInternal(ATTRIBUTE7);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute7.
     * @param value value to set the Attribute7
     */
    public void setAttribute7(String value) {
        setAttributeInternal(ATTRIBUTE7, value);
    }

    /**
     * Gets the attribute value for Attribute8, using the alias name Attribute8.
     * @return the Attribute8
     */
    public String getAttribute8() {
        return (String)getAttributeInternal(ATTRIBUTE8);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute8.
     * @param value value to set the Attribute8
     */
    public void setAttribute8(String value) {
        setAttributeInternal(ATTRIBUTE8, value);
    }

    /**
     * Gets the attribute value for Attribute9, using the alias name Attribute9.
     * @return the Attribute9
     */
    public String getAttribute9() {
        return (String)getAttributeInternal(ATTRIBUTE9);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute9.
     * @param value value to set the Attribute9
     */
    public void setAttribute9(String value) {
        setAttributeInternal(ATTRIBUTE9, value);
    }

    /**
     * Gets the attribute value for Attribute10, using the alias name Attribute10.
     * @return the Attribute10
     */
    public String getAttribute10() {
        return (String)getAttributeInternal(ATTRIBUTE10);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute10.
     * @param value value to set the Attribute10
     */
    public void setAttribute10(String value) {
        setAttributeInternal(ATTRIBUTE10, value);
    }

    /**
     * Gets the attribute value for Attribute11, using the alias name Attribute11.
     * @return the Attribute11
     */
    public String getAttribute11() {
        return (String)getAttributeInternal(ATTRIBUTE11);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute11.
     * @param value value to set the Attribute11
     */
    public void setAttribute11(String value) {
        setAttributeInternal(ATTRIBUTE11, value);
    }

    /**
     * Gets the attribute value for Attribute12, using the alias name Attribute12.
     * @return the Attribute12
     */
    public String getAttribute12() {
        return (String)getAttributeInternal(ATTRIBUTE12);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute12.
     * @param value value to set the Attribute12
     */
    public void setAttribute12(String value) {
        setAttributeInternal(ATTRIBUTE12, value);
    }

    /**
     * Gets the attribute value for Attribute13, using the alias name Attribute13.
     * @return the Attribute13
     */
    public String getAttribute13() {
        return (String)getAttributeInternal(ATTRIBUTE13);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute13.
     * @param value value to set the Attribute13
     */
    public void setAttribute13(String value) {
        setAttributeInternal(ATTRIBUTE13, value);
    }

    /**
     * Gets the attribute value for Attribute14, using the alias name Attribute14.
     * @return the Attribute14
     */
    public String getAttribute14() {
        return (String)getAttributeInternal(ATTRIBUTE14);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute14.
     * @param value value to set the Attribute14
     */
    public void setAttribute14(String value) {
        setAttributeInternal(ATTRIBUTE14, value);
    }

    /**
     * Gets the attribute value for Attribute15, using the alias name Attribute15.
     * @return the Attribute15
     */
    public String getAttribute15() {
        return (String)getAttributeInternal(ATTRIBUTE15);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute15.
     * @param value value to set the Attribute15
     */
    public void setAttribute15(String value) {
        setAttributeInternal(ATTRIBUTE15, value);
    }

    /**
     * Gets the attribute value for SalesorderId, using the alias name SalesorderId.
     * @return the SalesorderId
     */
    public Number getSalesorderId() {
        return (Number)getAttributeInternal(SALESORDERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SalesorderId.
     * @param value value to set the SalesorderId
     */
    public void setSalesorderId(Number value) {
        setAttributeInternal(SALESORDERID, value);
    }

    /**
     * Gets the attribute value for TransactionType, using the alias name TransactionType.
     * @return the TransactionType
     */
    public String getTransactionType() {
        return (String)getAttributeInternal(TRANSACTIONTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TransactionType.
     * @param value value to set the TransactionType
     */
    public void setTransactionType(String value) {
        setAttributeInternal(TRANSACTIONTYPE, value);
    }

    /**
     * Gets the attribute value for TransTypeCode, using the alias name TransTypeCode.
     * @return the TransTypeCode
     */
    public String getTransTypeCode() {
        return (String)getAttributeInternal(TRANSTYPECODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TransTypeCode.
     * @param value value to set the TransTypeCode
     */
    public void setTransTypeCode(String value) {
        setAttributeInternal(TRANSTYPECODE, value);
    }

    /**
     * Gets the attribute value for Transaction, using the alias name Transaction.
     * @return the Transaction
     */
    public String getTransaction() {
        return (String)getAttributeInternal(TRANSACTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Transaction.
     * @param value value to set the Transaction
     */
    public void setTransaction(String value) {
        setAttributeInternal(TRANSACTION, value);
    }

    /**
     * Gets the attribute value for IrHeaderId, using the alias name IrHeaderId.
     * @return the IrHeaderId
     */
    public Number getIrHeaderId() {
        return (Number)getAttributeInternal(IRHEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for IrHeaderId.
     * @param value value to set the IrHeaderId
     */
    public void setIrHeaderId(Number value) {
        setAttributeInternal(IRHEADERID, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }


    /**
     * Gets the attribute value for UpdateOn, using the alias name UpdateOn.
     * @return the UpdateOn
     */
    public Date getUpdateOn() {
        return (Date)getAttributeInternal(UPDATEON);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdateOn.
     * @param value value to set the UpdateOn
     */
    public void setUpdateOn(Date value) {
        setAttributeInternal(UPDATEON, value);
    }

    /**
     * Gets the attribute value for ReceiptChallanNo, using the alias name ReceiptChallanNo.
     * @return the ReceiptChallanNo
     */
    public String getReceiptChallanNo() {
        return (String)getAttributeInternal(RECEIPTCHALLANNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReceiptChallanNo.
     * @param value value to set the ReceiptChallanNo
     */
    public void setReceiptChallanNo(String value) {
        setAttributeInternal(RECEIPTCHALLANNO, value);
    }

    /**
     * Gets the attribute value for Unit, using the alias name Unit.
     * @return the Unit
     */
    public String getUnit() {
        return (String)getAttributeInternal(UNIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Unit.
     * @param value value to set the Unit
     */
    public void setUnit(String value) {
        setAttributeInternal(UNIT, value);
    }

    /**
     * Gets the attribute value for PocId, using the alias name PocId.
     * @return the PocId
     */
    public Number getPocId() {
        return (Number)getAttributeInternal(POCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PocId.
     * @param value value to set the PocId
     */
    public void setPocId(Number value) {
        setAttributeInternal(POCID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getLineEO() {
        return (RowIterator)getAttributeInternal(LINEEO);
    }


    /**
     * @return the associated entity NewHeaderEOImpl.
     */
    public NewHeaderEOImpl getNewHeaderEO() {
        return (NewHeaderEOImpl)getAttributeInternal(NEWHEADEREO);
    }

    /**
     * Sets <code>value</code> as the associated entity NewHeaderEOImpl.
     */
    public void setNewHeaderEO(NewHeaderEOImpl value) {
        setAttributeInternal(NEWHEADEREO, value);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMNJ_ISSUE_REC_WASH_REC_L_EO() {
        return (RowIterator)getAttributeInternal(MNJ_ISSUE_REC_WASH_REC_L_EO);
    }


    /**
     * @param headerId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number headerId) {
        return new Key(new Object[]{headerId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s =
            new oracle.jbo.server.SequenceImpl("MNJ_MFG_ISSUE_REC_WASH_H_S",
                                               getDBTransaction());
        oracle.jbo.domain.Number sVal = s.getSequenceNumber();
        setHeaderId(sVal);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }


    /**
     * Add locking logic here.
     */
    //    public void lock() {
    //        super.lock();
    //    }
    public void lock() {
        try {
            super.lock();
        } catch (RowInconsistentException e) {
            refresh(REFRESH_WITH_DB_ONLY_IF_UNCHANGED | REFRESH_CONTAINEES);

            super.lock();
        }

    }


     /**
         * Custom DML update/insert/delete logic here.
         * @param operation the operation type
         * @param e the transaction event
         */
        protected void doDML(int operation, TransactionEvent e) {
            Map sessionScope = ADFContext.getCurrent().getSessionScope();   
            String user = (String)sessionScope.get("userId");
            String orgId  =(String)sessionScope.get("orgId");
            String unitName  =(String)sessionScope.get("unitName");
            
            System.out.println("ASSES INS DO DML 1 ------------------>"+user);
            System.out.println("ASSES INS DO DML 2------------------>"+orgId);
            System.out.println("ASSES INS DML 3 ------------------>"+unitName);
            
            if(DML_UPDATE == operation){
                      try {
                          
                          setLastUpdateDate((Date)Date.getCurrentDate()); 
                          setLastUpdatedBy(new oracle.jbo.domain.Number(user));
                      } catch (SQLException f) {
                          System.out.println(f.getMessage());
                      }
                  }
                  else if (DML_INSERT == operation){
                   
                      try {
                          
                          //setHeaderNo(getSrNoString());
                          setOrgId(new oracle.jbo.domain.Number(orgId));
                          setAttribute1(unitName);
                          setCreationDate((Date)Date.getCurrentDate());  
                          setCreatedBy(new oracle.jbo.domain.Number(user));
                         
                         
                         
                      } catch (SQLException f) {
                          ;
                      }
                  } 
            
            super.doDML(operation, e);
        }

}
