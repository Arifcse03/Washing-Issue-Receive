package mnj.mfg.model.entities;

import java.sql.SQLException;

import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jan 16 14:57:39 PKT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        LineId {
            public Object get(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj) {
                return obj.getLineId();
            }

            public void put(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj,
                            Object value) {
                obj.setLineId((Number)value);
            }
        }
        ,
        RecevingSizeDet {
            public Object get(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj) {
                return obj.getRecevingSizeDet();
            }

            public void put(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj,
                            Object value) {
                obj.setRecevingSizeDet((Number)value);
            }
        }
        ,
        Inseam {
            public Object get(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj) {
                return obj.getInseam();
            }

            public void put(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj,
                            Object value) {
                obj.setInseam((String)value);
            }
        }
        ,
        SizeInseam {
            public Object get(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj) {
                return obj.getSizeInseam();
            }

            public void put(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj,
                            Object value) {
                obj.setSizeInseam((String)value);
            }
        }
        ,
        Quantity {
            public Object get(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj) {
                return obj.getQuantity();
            }

            public void put(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj,
                            Object value) {
                obj.setQuantity((Number)value);
            }
        }
        ,
        Attribute1 {
            public Object get(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj) {
                return obj.getAttribute1();
            }

            public void put(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj,
                            Object value) {
                obj.setAttribute1((String)value);
            }
        }
        ,
        SalesorderId {
            public Object get(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj) {
                return obj.getSalesorderId();
            }

            public void put(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj,
                            Object value) {
                obj.setSalesorderId((Number)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj,
                            Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj,
                            Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        CreationDate {
            public Object get(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj,
                            Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        CreatedBy {
            public Object get(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj,
                            Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        OrgId {
            public Object get(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj) {
                return obj.getOrgId();
            }

            public void put(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj,
                            Object value) {
                obj.setOrgId((Number)value);
            }
        }
        ,
        RewashSendDate {
            public Object get(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj) {
                return obj.getRewashSendDate();
            }

            public void put(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj,
                            Object value) {
                obj.setRewashSendDate((Date)value);
            }
        }
        ,
        RewashSendQty {
            public Object get(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj) {
                return obj.getRewashSendQty();
            }

            public void put(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj,
                            Object value) {
                obj.setRewashSendQty((Number)value);
            }
        }
        ,
        RewashReceiveDate {
            public Object get(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj) {
                return obj.getRewashReceiveDate();
            }

            public void put(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj,
                            Object value) {
                obj.setRewashReceiveDate((Date)value);
            }
        }
        ,
        Remarks {
            public Object get(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj) {
                return obj.getRemarks();
            }

            public void put(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj,
                            Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        StitchingWashingOne {
            public Object get(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj) {
                return obj.getStitchingWashingOne();
            }

            public void put(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj,
                            Object value) {
                obj.setStitchingWashingOne((String)value);
            }
        }
        ,
        StitchingWashingTwo {
            public Object get(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj) {
                return obj.getStitchingWashingTwo();
            }

            public void put(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj,
                            Object value) {
                obj.setStitchingWashingTwo((String)value);
            }
        }
        ,
        RejectionType {
            public Object get(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj) {
                return obj.getRejectionType();
            }

            public void put(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj,
                            Object value) {
                obj.setRejectionType((String)value);
            }
        }
        ,
        ProblemType {
            public Object get(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj) {
                return obj.getProblemType();
            }

            public void put(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj,
                            Object value) {
                obj.setProblemType((String)value);
            }
        }
        ,
        MNJ_ISSUE_REC_WASH_REC_L_EO {
            public Object get(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj) {
                return obj.getMNJ_ISSUE_REC_WASH_REC_L_EO();
            }

            public void put(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl obj,
                            Object value) {
                obj.setMNJ_ISSUE_REC_WASH_REC_L_EO((MNJ_ISSUE_REC_WASH_REC_L_EOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl object);

        public abstract void put(MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int LINEID = AttributesEnum.LineId.index();
    public static final int RECEVINGSIZEDET = AttributesEnum.RecevingSizeDet.index();
    public static final int INSEAM = AttributesEnum.Inseam.index();
    public static final int SIZEINSEAM = AttributesEnum.SizeInseam.index();
    public static final int QUANTITY = AttributesEnum.Quantity.index();
    public static final int ATTRIBUTE1 = AttributesEnum.Attribute1.index();
    public static final int SALESORDERID = AttributesEnum.SalesorderId.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int REWASHSENDDATE = AttributesEnum.RewashSendDate.index();
    public static final int REWASHSENDQTY = AttributesEnum.RewashSendQty.index();
    public static final int REWASHRECEIVEDATE = AttributesEnum.RewashReceiveDate.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int STITCHINGWASHINGONE = AttributesEnum.StitchingWashingOne.index();
    public static final int STITCHINGWASHINGTWO = AttributesEnum.StitchingWashingTwo.index();
    public static final int REJECTIONTYPE = AttributesEnum.RejectionType.index();
    public static final int PROBLEMTYPE = AttributesEnum.ProblemType.index();
    public static final int MNJ_ISSUE_REC_WASH_REC_L_EO = AttributesEnum.MNJ_ISSUE_REC_WASH_REC_L_EO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MNJ_ISSUEREC_WASH_REC_SIZE_EOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("mnj.mfg.model.entities.MNJ_ISSUEREC_WASH_REC_SIZE_EO");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for LineId, using the alias name LineId.
     * @return the LineId
     */
    public Number getLineId() {
        return (Number)getAttributeInternal(LINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LineId.
     * @param value value to set the LineId
     */
    public void setLineId(Number value) {
        setAttributeInternal(LINEID, value);
    }

    /**
     * Gets the attribute value for RecevingSizeDet, using the alias name RecevingSizeDet.
     * @return the RecevingSizeDet
     */
    public Number getRecevingSizeDet() {
        return (Number)getAttributeInternal(RECEVINGSIZEDET);
    }

    /**
     * Sets <code>value</code> as the attribute value for RecevingSizeDet.
     * @param value value to set the RecevingSizeDet
     */
    public void setRecevingSizeDet(Number value) {
        setAttributeInternal(RECEVINGSIZEDET, value);
    }

    /**
     * Gets the attribute value for Inseam, using the alias name Inseam.
     * @return the Inseam
     */
    public String getInseam() {
        return (String)getAttributeInternal(INSEAM);
    }

    /**
     * Sets <code>value</code> as the attribute value for Inseam.
     * @param value value to set the Inseam
     */
    public void setInseam(String value) {
        setAttributeInternal(INSEAM, value);
    }

    /**
     * Gets the attribute value for SizeInseam, using the alias name SizeInseam.
     * @return the SizeInseam
     */
    public String getSizeInseam() {
        return (String)getAttributeInternal(SIZEINSEAM);
    }

    /**
     * Sets <code>value</code> as the attribute value for SizeInseam.
     * @param value value to set the SizeInseam
     */
    public void setSizeInseam(String value) {
        setAttributeInternal(SIZEINSEAM, value);
    }

    /**
     * Gets the attribute value for Quantity, using the alias name Quantity.
     * @return the Quantity
     */
    public Number getQuantity() {
        return (Number)getAttributeInternal(QUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Quantity.
     * @param value value to set the Quantity
     */
    public void setQuantity(Number value) {
        setAttributeInternal(QUANTITY, value);
    }

    /**
     * Gets the attribute value for Attribute1, using the alias name Attribute1.
     * @return the Attribute1
     */
    public String getAttribute1() {
        return (String)getAttributeInternal(ATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute1.
     * @param value value to set the Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**
     * Gets the attribute value for SalesorderId, using the alias name SalesorderId.
     * @return the SalesorderId
     */
    public Number getSalesorderId() {
        return (Number)getAttributeInternal(SALESORDERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SalesorderId.
     * @param value value to set the SalesorderId
     */
    public void setSalesorderId(Number value) {
        setAttributeInternal(SALESORDERID, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the OrgId
     */
    public Number getOrgId() {
        return (Number)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(Number value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for RewashSendDate, using the alias name RewashSendDate.
     * @return the RewashSendDate
     */
    public Date getRewashSendDate() {
        return (Date)getAttributeInternal(REWASHSENDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RewashSendDate.
     * @param value value to set the RewashSendDate
     */
    public void setRewashSendDate(Date value) {
        setAttributeInternal(REWASHSENDDATE, value);
    }

    /**
     * Gets the attribute value for RewashSendQty, using the alias name RewashSendQty.
     * @return the RewashSendQty
     */
    public Number getRewashSendQty() {
        return (Number)getAttributeInternal(REWASHSENDQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for RewashSendQty.
     * @param value value to set the RewashSendQty
     */
    public void setRewashSendQty(Number value) {
        setAttributeInternal(REWASHSENDQTY, value);
    }

    /**
     * Gets the attribute value for RewashReceiveDate, using the alias name RewashReceiveDate.
     * @return the RewashReceiveDate
     */
    public Date getRewashReceiveDate() {
        return (Date)getAttributeInternal(REWASHRECEIVEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RewashReceiveDate.
     * @param value value to set the RewashReceiveDate
     */
    public void setRewashReceiveDate(Date value) {
        setAttributeInternal(REWASHRECEIVEDATE, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for StitchingWashingOne, using the alias name StitchingWashingOne.
     * @return the StitchingWashingOne
     */
    public String getStitchingWashingOne() {
        return (String)getAttributeInternal(STITCHINGWASHINGONE);
    }

    /**
     * Sets <code>value</code> as the attribute value for StitchingWashingOne.
     * @param value value to set the StitchingWashingOne
     */
    public void setStitchingWashingOne(String value) {
        setAttributeInternal(STITCHINGWASHINGONE, value);
    }

    /**
     * Gets the attribute value for StitchingWashingTwo, using the alias name StitchingWashingTwo.
     * @return the StitchingWashingTwo
     */
    public String getStitchingWashingTwo() {
        return (String)getAttributeInternal(STITCHINGWASHINGTWO);
    }

    /**
     * Sets <code>value</code> as the attribute value for StitchingWashingTwo.
     * @param value value to set the StitchingWashingTwo
     */
    public void setStitchingWashingTwo(String value) {
        setAttributeInternal(STITCHINGWASHINGTWO, value);
    }

    /**
     * Gets the attribute value for RejectionType, using the alias name RejectionType.
     * @return the RejectionType
     */
    public String getRejectionType() {
        return (String)getAttributeInternal(REJECTIONTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RejectionType.
     * @param value value to set the RejectionType
     */
    public void setRejectionType(String value) {
        setAttributeInternal(REJECTIONTYPE, value);
    }

    /**
     * Gets the attribute value for ProblemType, using the alias name ProblemType.
     * @return the ProblemType
     */
    public String getProblemType() {
        return (String)getAttributeInternal(PROBLEMTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProblemType.
     * @param value value to set the ProblemType
     */
    public void setProblemType(String value) {
        setAttributeInternal(PROBLEMTYPE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity MNJ_ISSUE_REC_WASH_REC_L_EOImpl.
     */
    public MNJ_ISSUE_REC_WASH_REC_L_EOImpl getMNJ_ISSUE_REC_WASH_REC_L_EO() {
        return (MNJ_ISSUE_REC_WASH_REC_L_EOImpl)getAttributeInternal(MNJ_ISSUE_REC_WASH_REC_L_EO);
    }

    /**
     * Sets <code>value</code> as the associated entity MNJ_ISSUE_REC_WASH_REC_L_EOImpl.
     */
    public void setMNJ_ISSUE_REC_WASH_REC_L_EO(MNJ_ISSUE_REC_WASH_REC_L_EOImpl value) {
        setAttributeInternal(MNJ_ISSUE_REC_WASH_REC_L_EO, value);
    }


    /**
     * @param recevingSizeDet key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number recevingSizeDet) {
        return new Key(new Object[]{recevingSizeDet});
    }

    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s =new oracle.jbo.server.SequenceImpl("MNJ_ISSUEREC_WASH_REC_SIZE_S",getDBTransaction());
        oracle.jbo.domain.Number sVal = s.getSequenceNumber();
        setRecevingSizeDet(sVal);
    }
    
    /**
        * Custom DML update/insert/delete logic here.
        * @param operation the operation type
        * @param e the transaction event
        */
       protected void doDML(int operation, TransactionEvent e) {
           Map sessionScope = ADFContext.getCurrent().getSessionScope();   
           String user = (String)sessionScope.get("userId");
           String orgId  =(String)sessionScope.get("orgId");
           String unitName  =(String)sessionScope.get("unitName");
           
           System.out.println("ASSES INS DO DML 1 ------------------>"+user);
           System.out.println("ASSES INS DO DML 2------------------>"+orgId);
           System.out.println("ASSES INS DML 3 ------------------>"+unitName);
           
           if(DML_UPDATE == operation){
                     try {
                         
                         setLastUpdateDate((Date)Date.getCurrentDate()); 
                         setLastUpdatedBy(new oracle.jbo.domain.Number(user));
                     } catch (SQLException f) {
                         System.out.println(f.getMessage());
                     }
                 }
                 else if (DML_INSERT == operation){
                  
                     try {
                         
                         //setHeaderNo(getSrNoString());
                         //setOrgId(new oracle.jbo.domain.Number(orgId));
                         //setAttribute1(unitName);
                         setCreationDate((Date)Date.getCurrentDate());  
                         setCreatedBy(new oracle.jbo.domain.Number(user));
                        
                        
                        
                     } catch (SQLException f) {
                         ;
                     }
                 } 
           
           super.doDML(operation, e);
       }



}
